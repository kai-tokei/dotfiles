{"version":3,"file":"explain.js","names":["isSpawnResult","result","explainAsync","packageName","parameters","ora","logNewSection","args","stdout","spawnAsync","stdio","succeed","JSON","parse","error","stderr","match","fail","chalk","underline","message","warnAboutDeepDependenciesAsync","pkg","explanations","name","Log","debug","printExplanationsAsync","organizeExplanations","isValid","valid","invalid","explanation","push","warn","otherPkg","semver","satisfies","version","length","printInvalidPackages","log","formatPkg","map","join","versionColor"],"sources":["../../../../../src/commands/info/doctor/depedencies/explain.ts"],"sourcesContent":["import spawnAsync, { SpawnResult } from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport semver from 'semver';\n\nimport Log from '../../../../log';\nimport { logNewSection } from '../../../../utils/ora';\nimport { RootNodePackage, VersionSpec } from './explain.types';\n\ntype TargetPackage = { name: string; version: VersionSpec };\n\nfunction isSpawnResult(result: any): result is SpawnResult {\n  return 'stderr' in result && 'stdout' in result && 'status' in result;\n}\n\n/** Spawn `npm explain [name] --json` and return the parsed JSON. Returns `null` if the requested package is not installed. */\nexport async function explainAsync(\n  packageName: string,\n  parameters: string[] = []\n): Promise<RootNodePackage[] | null> {\n  const ora = logNewSection(`Finding all copies of ${packageName}`);\n  const args = ['explain', packageName, ...parameters, '--json'];\n\n  try {\n    const { stdout } = await spawnAsync('npm', args, {\n      stdio: 'pipe',\n    });\n    ora.succeed(`Found all copies of ${packageName}`);\n\n    return JSON.parse(stdout);\n  } catch (error: any) {\n    if (isSpawnResult(error)) {\n      if (error.stderr.match(/npm ERR! No dependencies found matching/)) {\n        ora.succeed();\n        return null;\n      } else if (error.stdout.match(/Usage: npm <command>/)) {\n        ora.fail(\n          `Dependency tree validation for ${chalk.underline(\n            packageName\n          )} failed. This validation is only available on Node 16+ / npm 8.`\n        );\n        return null;\n      }\n    }\n    ora.fail(`Failed to find dependency tree for ${packageName}: ` + error.message);\n    throw error;\n  }\n}\n\nexport async function warnAboutDeepDependenciesAsync(pkg: TargetPackage) {\n  const explanations = await explainAsync(pkg.name);\n\n  if (!explanations) {\n    Log.debug(`No dependencies found for ${pkg.name}`);\n    return;\n  }\n  printExplanationsAsync(pkg, explanations);\n}\n\nexport function organizeExplanations(\n  pkg: TargetPackage,\n  {\n    explanations,\n    isValid,\n  }: {\n    explanations: RootNodePackage[];\n    isValid: (pkg: TargetPackage) => boolean;\n  }\n) {\n  const valid: RootNodePackage[] = [];\n  const invalid: RootNodePackage[] = [];\n\n  for (const explanation of explanations) {\n    const { name } = explanation;\n    if (name === pkg.name) {\n      if (isValid(explanation)) {\n        valid.push(explanation);\n      } else {\n        invalid.push(explanation);\n      }\n    } else {\n      // Should never happen\n      Log.warn(\n        `Found invalid case where the searched package name \"${name}\" doesn't match requested package name \"${pkg.name}\"`\n      );\n    }\n  }\n  return { valid, invalid };\n}\n\nexport async function printExplanationsAsync(pkg: TargetPackage, explanations: RootNodePackage[]) {\n  const { invalid } = organizeExplanations(pkg, {\n    explanations,\n    isValid(otherPkg) {\n      return semver.satisfies(otherPkg.version, pkg.version);\n    },\n  });\n\n  if (invalid.length > 0) {\n    printInvalidPackages(pkg, { explanations: invalid });\n  } else {\n    Log.log(chalk`  All copies of {bold ${pkg.name}} satisfy {green ${pkg.version}}`);\n  }\n}\n\nfunction printInvalidPackages(\n  pkg: TargetPackage,\n  { explanations }: { explanations: RootNodePackage[] }\n) {\n  Log.warn(`Expected package ${formatPkg(pkg, 'green')}`);\n  Log.warn(chalk`Found invalid:`);\n  Log.warn(explanations.map(explanation => '  ' + formatPkg(explanation, 'red')).join('\\n'));\n  Log.warn(chalk`  {dim (for more info, run: {bold npm why ${pkg.name}})}`);\n\n  // Log.log(invalid.map(explanation => explainNode(explanation)).join('\\n\\n'));\n}\n\nfunction formatPkg(pkg: TargetPackage, versionColor: string) {\n  return chalk`{bold ${pkg.name}}{cyan @}{${versionColor} ${pkg.version}}`;\n}\n"],"mappings":"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"}