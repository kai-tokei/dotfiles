{"version":3,"file":"openDevTools.js","names":["tryOpeningDevToolsAsync","projectRoot","exp","options","devToolsUrl","DevToolsServer","startAsync","Log","log","chalk","underline","nonInteractive","isDetached","TerminalUI","shouldOpenDevToolsOnStartupAsync","UserSettings","setAsync","openDeveloperTools"],"sources":["../../../src/commands/start/openDevTools.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\n// @ts-ignore: not typed\nimport { DevToolsServer } from '@expo/dev-tools';\nimport chalk from 'chalk';\nimport { UserSettings } from 'xdl';\n\nimport Log from '../../log';\nimport * as TerminalUI from './TerminalUI';\n\nexport async function tryOpeningDevToolsAsync(\n  projectRoot: string,\n  {\n    exp,\n    options,\n  }: {\n    exp: Pick<ExpoConfig, 'isDetached'>;\n    options: { nonInteractive?: boolean };\n  }\n): Promise<void> {\n  const devToolsUrl = await DevToolsServer.startAsync(projectRoot);\n  Log.log(`Developer tools running on ${chalk.underline(devToolsUrl)}`);\n\n  if (!options.nonInteractive && !exp.isDetached) {\n    if (await TerminalUI.shouldOpenDevToolsOnStartupAsync()) {\n      await UserSettings.setAsync('openDevToolsAtStartup', true);\n      TerminalUI.openDeveloperTools(devToolsUrl);\n    } else {\n      await UserSettings.setAsync('openDevToolsAtStartup', false);\n    }\n  }\n}\n"],"mappings":";;;;;;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AANA;AAQO,eAAeA,uBAAf,CACLC,WADK,EAEL;EACEC,GADF;EAEEC;AAFF,CAFK,EASU;EACf,MAAMC,WAAW,GAAG,MAAMC,0BAAA,CAAeC,UAAf,CAA0BL,WAA1B,CAA1B;;EACAM,cAAA,CAAIC,GAAJ,CAAS,8BAA6BC,gBAAA,CAAMC,SAAN,CAAgBN,WAAhB,CAA6B,EAAnE;;EAEA,IAAI,CAACD,OAAO,CAACQ,cAAT,IAA2B,CAACT,GAAG,CAACU,UAApC,EAAgD;IAC9C,IAAI,MAAMC,UAAU,GAACC,gCAAX,EAAV,EAAyD;MACvD,MAAMC,mBAAA,CAAaC,QAAb,CAAsB,uBAAtB,EAA+C,IAA/C,CAAN;MACAH,UAAU,GAACI,kBAAX,CAA8Bb,WAA9B;IACD,CAHD,MAGO;MACL,MAAMW,mBAAA,CAAaC,QAAb,CAAsB,uBAAtB,EAA+C,KAA/C,CAAN;IACD;EACF;AACF"}